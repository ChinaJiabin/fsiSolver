/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default backward;
}

gradSchemes
{
    default         none;
    grad(p)         Gauss linear;
    snGradCorr(U)   Gauss linear;
    grad(U)         Gauss linear;
    snGradCorr(p)   Gauss linear;
    snGradCorr(cellMotionU) Gauss linear;
    grad(T)         Gauss linear;
}

divSchemes
{
    default         none;
    div(phi,U)      Gauss skewCorrected linear;
    div(phi,T)      Gauss Gamma  0.2;
    
}

laplacianSchemes
{
    default                                        none;
    laplacian((mu|rho0),U)       Gauss linear corrected;
    laplacian(nu,U)              Gauss linear corrected;
    laplacian(diffusivity,cellMotionU) Gauss linear corrected;
    laplacian((1|A(U)),p)        Gauss linear corrected;
    laplacian((k|(rho0*Cp)),T)   Gauss linear corrected;
}

interpolationSchemes
{
    default           none;
    interpolate(HbyA) linear;
    laplacian(DT,T)   Gauss linear corrected;
    interpolate(y)    linear;
    interpolate(U)    skewCorrected linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p                 ;
    T                 ;
}

// ************************************************************************* //
